generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  userName       String
  email          String     @unique
  hashedPassword String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  image          String?
  club           ClubType?
  role           RoleType
  school         School?
  userType       UserType?
  level          Level?
  Blog           Blog[]
  Event          Event[]
  researches     Research[]
}

model Event {
  id          Int       @id @default(autoincrement())
  createdById Int
  dateOfEvent DateTime
  title       String
  desc        String
  venue       String
  timeOfEvent DateTime
  gallery     String[]  @default([])
  type        EventType
  speaker     String
  host        String
  poster      String
  slug        String    @unique
  createdBy   User      @relation(fields: [createdById], references: [id])
}

model Research {
  id        Int      @id @default(autoincrement())
  userId    Int
  slug        String    @unique
  createdAt DateTime @default(now())
  status    Status  @default(PENDING)
  type      ResearchType
  desc      String
  body      String
  background  String
  statement    String
  justification   String
  approach        String
  methodology     String
  requirements    String
  design          String
  development     String
  partners  String[]
  collaborators   String[]
  updatedBy String?
  title     String
  image String?
  user      User     @relation(fields: [userId], references: [id])
}

model Blog {
  id          Int      @id @default(autoincrement())
  createdById Int
  createdAt   DateTime @default(now())
  title       String
  desc        String
  slug        String   @unique
  poster      String
  views       Int      @default(0)
  createdBy   User     @relation(fields: [createdById], references: [id])
}

enum EventType {
  GENERAL
  GDSC
  ACS
  HEALTHIT
  IOT
}
enum ResearchType {
URF
IRF
NRF
}

enum Status {
  PENDING
  INPROGRESS
  DONE
  REJECTED
}

enum ClubType {
  GDSC
  ACS
  HealthIT
  IoT
  GENERAL
}

enum RoleType {
  Member
  Lead
  CoLead
  CoTeam
  Patron
  Admin
}

enum School {
  CSE
  ETS
  FORENSICS
  MASTERSCSE
  IT
}

enum UserType {
  STUDENT
  CLASSREP
  SCHOOLREP
  DEPUTYCLASSREP
  DEPUTYSCHOOLREP
  LECTURER
  COD
  ADMIN
}

enum Level {
  FIRST
  SECOND
  THIRD
  FOURTH
}
